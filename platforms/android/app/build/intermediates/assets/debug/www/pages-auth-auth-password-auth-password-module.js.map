{"version":3,"sources":["webpack:///./src/app/pages/auth/auth-password/auth-password.module.ts","webpack:///./src/app/pages/auth/auth-password/auth-password.page.html","webpack:///./src/app/pages/auth/auth-password/auth-password.page.scss","webpack:///./src/app/pages/auth/auth-password/auth-password.page.ts","webpack:///./src/app/services/alert-provider/alert-provider.service.ts","webpack:///./src/app/services/forgot-password/forgot-password.service.ts","webpack:///./src/app/services/route-provider/route-provider.service.ts"],"names":[],"mappings":"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","file":"pages-auth-auth-password-auth-password-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AuthPasswordPage } from './auth-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthPasswordPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AuthPasswordPage]\n})\nexport class AuthPasswordPageModule {}\n","module.exports = \"<ion-header no-border>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"end\\\">\\n            <!-- <a class=\\\"Login-Link\\\" slot=\\\"end\\\" (click)=\\\"doCancel()\\\">Login</a> -->\\n        </ion-buttons>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"no-scroll content-background\\\">\\n    <div class=\\\"container\\\">\\n        <ion-grid>\\n            <ion-row>\\n                <ion-col>\\n                    <div class=\\\"logo\\\"></div>\\n                </ion-col>\\n            </ion-row>\\n        </ion-grid>\\n        <ion-grid>\\n            <ion-row>\\n                <ion-col size=\\\"1\\\"></ion-col>\\n                <ion-col size=\\\"10\\\">\\n                    <div class=\\\"input-container\\\">\\n                        <img src=\\\"../../assets/images/icon-smart-phone.svg\\\" class=\\\"input--icon\\\" />\\n                        <input type=\\\"tel\\\" class=\\\"input-icon\\\" [(ngModel)]=\\\"Model.Phone\\\" maxlength=\\\"12\\\" />\\n                        <br />\\n                        <span class=\\\"input-message\\\">Please key in your mobile number </span>\\n                    </div>\\n                </ion-col>\\n                <ion-col size=\\\"1\\\"></ion-col>\\n            </ion-row>\\n            <ion-row>\\n                <ion-col size=\\\"1\\\"></ion-col>\\n                <ion-col size=\\\"10\\\">\\n                    <div class=\\\"input-container\\\">\\n                        <input type=\\\"text\\\" class=\\\"input-icon-password\\\" *ngIf=\\\"showPassword\\\"\\n                            [(ngModel)]=\\\"Model.Password\\\" />\\n                        <input type=\\\"password\\\" class=\\\"input-icon-password\\\" *ngIf=\\\"!showPassword\\\"\\n                            [(ngModel)]=\\\"Model.Password\\\" />\\n                        <ion-icon name=\\\"eye\\\" class=\\\"eye-button\\\" *ngIf=\\\"showPassword\\\" (click)=\\\"doShowPassword(false)\\\">\\n                        </ion-icon>\\n                        <ion-icon name=\\\"eye-off\\\" class=\\\"eye-button\\\" *ngIf=\\\"!showPassword\\\"\\n                            (click)=\\\"doShowPassword(true)\\\"></ion-icon>\\n                        <img src=\\\"../../assets/images/icon-change-login-password.svg\\\" class=\\\"input--icon\\\" />\\n                        <br />\\n                        <span class=\\\"input-message\\\">Please key in your password </span>\\n                        <br />\\n                        <span color=\\\"danger\\\" *ngIf=\\\"ErrorMessage != ''\\\" class=\\\"errormessage\\\">{{ErrorMessage}}</span>\\n                    </div>\\n                    <br />\\n                    <a class=\\\"link\\\" (click)=\\\"doForgotPassword()\\\">Forgot Password</a>\\n                </ion-col>\\n                <ion-col size=\\\"1\\\"></ion-col>\\n            </ion-row>\\n        </ion-grid>\\n    </div>\\n    <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n        <ion-fab-button class=\\\"next-button\\\" (click)=\\\"doNext()\\\">\\n            <ion-icon name=\\\"arrow-forward\\\"></ion-icon>\\n        </ion-fab-button>\\n    </ion-fab>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGgvYXV0aC1wYXNzd29yZC9hdXRoLXBhc3N3b3JkLnBhZ2Uuc2NzcyJ9 */\"","\nimport { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { ConstantService } from './../../../services/constant/constant.service';\nimport { DataTransactionService } from './../../..//services/data-transaction/data-transaction.service';\nimport { NativeApiService } from '../../../services/native-api/native-api.service';\nimport { Platform } from '@ionic/angular';\nimport { RestApiService } from '../../../services/rest-api.service'\nimport { RouteProviderService } from 'src/app/services/route-provider/route-provider.service';\nimport { AlertProviderService } from 'src/app/services/alert-provider/alert-provider.service';\nimport { ForgotPasswordService } from '../../../services/forgot-password/forgot-password.service';\n@Component({\n  selector: 'app-auth-password',\n  templateUrl: './auth-password.page.html',\n  styleUrls: ['./auth-password.page.scss'],\n  providers: [\n    NativeApiService\n  ]\n})\nexport class AuthPasswordPage implements OnInit {\n\n  Model = {\n    Phone: '',\n    Password: '',\n  }\n\n  ErrorMessage = '';\n  isDebug: boolean = false;\n  showPassword : boolean = false;\n\n  constructor(private router: Router,\n    private dataTransaction: DataTransactionService,\n    private api: NativeApiService,\n    private platform: Platform,\n    private restApi: RestApiService,\n    private routerProvider: RouteProviderService,\n    private alert: AlertProviderService,\n    private forgotPasswordService: ForgotPasswordService\n  ) {\n    router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) this.ngOnInit();\n    })\n\n    if (platform.is('cordova')) this.isDebug = false;\n    else this.isDebug = true;\n\n    this.Model.Phone = this.dataTransaction.Phone;\n  }\n\n  ngOnInit() {\n    if (this.Model.Phone == '' || this.dataTransaction.Phone == '') {\n      this.router.navigate(['auth-phone']);\n    }\n  }\n\n  doNext() {\n    if (!this.isDebug) {\n      this.api.Login(`${this.Model.Phone}`, this.Model.Password, [\"FreeMember\", \"Member\"])\n        .then(response => {\n          if (response.status == 200) {\n            let result = this.api.converResponseToJson(response.data);\n            if (result.ErrorCode == \"0\") {\n              this.dataTransaction.setUserPhone(this.Model.Phone);\n              this.dataTransaction.setProfile(this.Model);\n              this.dataTransaction.setAccessToken(result.Data.NewAccessToken);\n              this.dataTransaction.setNewRefreshToken(result.Data.NewRefreshToken);\n              this.doRegisterNotification(result.Data.NewAccessToken);\n              this.doGetProfile(result.Data.NewAccessToken);\n            } else {\n              this.alert.showErrorMessageAlert(result.ErrorMessage);\n            }\n          }\n        }).catch(error => {\n          this.alert.showErrorMessageAlert(error);\n        })\n    } else {\n      this.restApi.Login(`${this.Model.Phone}`, this.Model.Password, [\"FreeMember\", \"Member\"])\n        .subscribe(response => {\n          let result = this.restApi.converResponseToJson(response);\n          if (result.ErrorCode == \"0\") {\n            this.dataTransaction.setUserPhone(this.Model.Phone);\n            this.dataTransaction.setProfile(this.Model);\n            this.dataTransaction.setAccessToken(result.Data.NewAccessToken);\n            this.dataTransaction.setNewRefreshToken(result.Data.NewRefreshToken);\n            this.doGetProfile(result.Data.NewAccessToken);\n          } else {\n            this.ErrorMessage = result.ErrorMessage;\n          }\n        }, error => {\n          this.alert.showErrorMessageAlert(error);\n        })\n    }\n\n  }\n\n  doGetProfile(AccessToken) {\n    if (!this.isDebug) {\n      this.api.GetProfile(AccessToken).then(\n        response => {\n          \n          if (response.status == 200) {\n            let result = this.api.converResponseToJson(response.data);\n            if (result.ErrorCode == \"0\") {\n              this.dataTransaction.setProfile(result.Data);\n              this.dataTransaction.shouldNavigate = true;\n              this.dataTransaction.ProfileImage = result.Data.Photo == null || result.Data.Photo == '' ? '../../assets/images/icon-dispaly-name.svg' : result.Data.Photo;\n              this.routerProvider.nextStep(result.Data.NextStep);\n            } else {\n              this.alert.showErrorMessageAlert(result.ErrorMessage);\n            }\n          }\n        }\n      ).catch(error => this.alert.showErrorMessageAlert(error));\n    } else {\n      this.restApi.GetProfile(AccessToken).subscribe(\n        response => {\n          let result = this.restApi.converResponseToJson(response);\n          if (result.ErrorCode == \"0\") {\n            this.dataTransaction.setProfile(result.Data);\n            this.dataTransaction.shouldNavigate = true;\n            this.routerProvider.nextStep(result.Data.NextStep);\n          } else {\n            this.ErrorMessage = result.ErrorMessage;\n          }\n        },\n        error => {\n          this.ErrorMessage = error;\n        }\n      )\n    }\n  }\n\n  doRegisterNotification(AccessToken) {\n    this.dataTransaction.GetToken().then(\n      token => {\n        this.api.Register_Notification(token.token, AccessToken).then(\n          response => {\n          }\n        )\n      }\n    )\n\n\n  }\n\n  doForgotPassword() {\n    this.forgotPasswordService.preRequestResetPassword(this.Model.Phone);\n  }\n\n  doCancel() {\n    this.router.navigate(['auth-phone'])\n  }\n\n  doShowPassword(value){\n    this.showPassword = value;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { LoadingController, AlertController } from '@ionic/angular'\nimport { ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertProviderService {\n\n  constructor(\n    private alertController : AlertController,\n    private loadingCntroller : LoadingController,\n    public toastController: ToastController\n  ) { }\n\n\n  async showErrorMessageAlert(msg){\n    const alert = await this.alertController.create({\n      header: 'Jom-Save',\n      message: msg,\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n\n  async presentToast(msg) {\n    const toast = await this.toastController.create({\n      message: msg,\n      duration: 3000,\n      position:'bottom'\n    });\n    toast.present();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DataTransactionService } from '../data-transaction/data-transaction.service';\nimport { NativeApiService } from '../native-api/native-api.service';\nimport { RestApiService } from '../rest-api.service';\nimport { Platform, AlertController } from '@ionic/angular';\nimport { RouteProviderService } from '../route-provider/route-provider.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ForgotPasswordService {\n\n\n  isDebug: boolean = false;\n  AccessToken: string = \"\";\n  constructor(\n    private data: DataTransactionService,\n    private api: NativeApiService,\n    private restApi: RestApiService,\n    private router: RouteProviderService,\n    private platform: Platform,\n    public alertController: AlertController\n  ) {\n    if (platform.is('cordova')) this.isDebug = false;\n    this.isDebug = true;\n  }\n\n  ngOnInit(): void {\n    this.data.getAccessToken().then(\n      Response => {\n        this.AccessToken = Response;\n      }\n    )\n  }\n\n\n  preRequestResetPassword(mobile) {\n    if (!this.isDebug) {\n      this.api.PreRequestResetPassword(mobile).then(\n        response => {\n          if (response.status == 200) {\n            let result = this.api.converResponseToJson(response.data);\n            if (result.ErrorCode == \"0\") {\n              if (result.Data.IsEmailVerified == true || result.Data.IsEmailVerified == \"true\" || result.Data.IsEmailVerified == \"1\") {\n                this.router.nextStep('ForgotPassword');\n              } else {\n                this.emailNotRegisteredAlert(mobile);\n              }\n            } else {\n              alert(result.ErrorMessage);\n            }\n          }\n        }\n      )\n    } else {\n      this.restApi.PreRequestResetPassword(mobile).subscribe(\n        response => {\n          let result = this.restApi.converResponseToJson(response);\n          if (result.ErrorCode == 0) {\n            if (result.Data.IsEmailVerified == \"Yes\") {\n              this.router.nextStep('ForgotPassword');\n            } else {\n              this.emailNotRegisteredAlert(mobile);\n            }\n          } else {\n            alert(result.ErrorMessage);\n          }\n        }\n      )\n    }\n  }\n\n  async  phoneNotRegisterAlert() {\n    const alert = await this.alertController.create({\n      header: 'Jom-Save',\n      subHeader: 'Warning',\n      message: 'The phone is not registered.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n\n  async emailNotRegisteredAlert(mobile) {\n    const alert = await this.alertController.create({\n      header: 'Jom-Save',\n      message: 'Your password will be reset and a new password will be sent to your mobile number',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            this.router.nextStep(\"Password\");\n          }\n        }, {\n          text: 'Proceed',\n          handler: () => {\n            this.doProceed(mobile);\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  doProceed(mobile) {\n    if (!this.isDebug) {\n      this.api.RequestResetPassword(mobile, '', this.AccessToken).then(\n        response => {\n          if (response.status == 200) {\n            let result = this.api.converResponseToJson(response.data);\n            if (result.ErrorCode == \"0\") {\n              this.showAlert(`Your password has been sent to your mobile ${mobile}`);\n            } else {\n              alert(result.ErrorMessage);\n            }\n          }\n        }\n      )\n    } else {\n      this.restApi.RequestResetPassword(mobile, '', this.AccessToken).subscribe(\n        response => {\n          let result = this.restApi.converResponseToJson(response);\n          if (result.ErrorCode == 0) {\n            this.showAlert(`Your password has been sent to your mobile ${mobile}`);\n          } else {\n            alert(result.ErrorMessage);\n          }\n        }\n      )\n    }\n  }\n\n  async showAlert(msg) {\n    const alert = await this.alertController.create({\n      header: 'JomSave',\n      subHeader: 'Reset Password',\n      message: msg,\n      buttons: [\n        {\n          text: 'Okay',\n          handler: () => {\n            this.router.nextStep(\"Phone\");\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteProviderService {\n\n  constructor(private router: Router) {\n  }\n\n  nextStep(step) {\n    switch (step) {\n      case \"AddReferral\":\n        this.router.navigate(['referral']);\n        break;\n      case \"MakePayment\":\n        this.router.navigate(['top-up']);\n        break;\n      case \"CreatePassword\":\n        this.router.navigate(['change-password']);\n        break;\n      case \"VerifyEmail\":\n        this.router.navigate(['mail-confirmation']);\n        break;\n      case \"CompleteProfile\":\n        this.router.navigate(['complete-profile']);\n        break;\n      case \"VerifyProfile\":\n        this.router.navigate(['profile/profile/home']);\n        break;\n      case \"Password\":\n        this.router.navigate(['auth-password']);\n        break;\n      case \"Upline\":\n        break;\n      case \"ForgotPassword\":\n        this.router.navigate(['forgot-password']);\n        break;\n      case \"Phone\":\n        this.router.navigate(['auth-phone']);\n        break;\n      case \"OTP-ChangePassword\":\n        this.router.navigate(['otp-change-number']);\n        break;\n      default:\n        this.router.navigate(['profile/profile/home']);\n    }\n  }\n}\n"],"sourceRoot":""}