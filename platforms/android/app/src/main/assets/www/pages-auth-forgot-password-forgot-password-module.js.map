{"version":3,"sources":["webpack:///./src/app/pages/auth/forgot-password/forgot-password.module.ts","webpack:///./src/app/pages/auth/forgot-password/forgot-password.page.html","webpack:///./src/app/pages/auth/forgot-password/forgot-password.page.scss","webpack:///./src/app/pages/auth/forgot-password/forgot-password.page.ts"],"names":[],"mappings":"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","file":"pages-auth-forgot-password-forgot-password-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ForgotPasswordPage } from './forgot-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ForgotPasswordPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ForgotPasswordPage]\n})\nexport class ForgotPasswordPageModule {}\n","module.exports = \"<ion-header no-border>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"no-scroll content-background\\\">\\n    <div class=\\\"container\\\">\\n        <ion-grid>\\n            <ion-row>\\n                <ion-col>\\n                    <div class=\\\"logo\\\"></div>\\n                </ion-col>\\n            </ion-row>\\n            <br />\\n            <ion-row>\\n                <ion-col size=\\\"1\\\"></ion-col>\\n                <ion-col size=\\\"10\\\">\\n                    <h3 class=\\\"text-center\\\">{{Model.Phone}}</h3>\\n                </ion-col>\\n                <ion-col size=\\\"1\\\"></ion-col>\\n            </ion-row>\\n            <ion-row>\\n                <ion-col size=\\\"1\\\"></ion-col>\\n                <ion-col size=\\\"10\\\">\\n                    <div class=\\\"input-container\\\">\\n                        <input type=\\\"email\\\" class=\\\"input-icon-password\\\" [(ngModel)]=\\\"Model.Email\\\"/>\\n                        <img src=\\\"../../assets/images/icon-email.svg\\\" class=\\\"input--icon\\\" />\\n                        <br />\\n                        <span class=\\\"input-message\\\">Please key in your email address </span>\\n                    </div>\\n                </ion-col>\\n                <ion-col size=\\\"1\\\"></ion-col>\\n            </ion-row>\\n            <br/>\\n            <ion-row *ngIf=\\\"ErrorMessage\\\">\\n                <ion-col>\\n                    <p class=\\\"error-message\\\" >{{ErrorMessage}}</p>\\n                </ion-col>\\n            </ion-row>     \\n            <ion-row>\\n                <ion-col size=\\\"3\\\"></ion-col>\\n                <ion-col size=\\\"6\\\">\\n                    <ion-button fill=\\\"outline\\\" expand=\\\"block\\\" color=\\\"success\\\" (click)=\\\"doNext()\\\"><ion-icon name=\\\"checkmark\\\"></ion-icon> Confirm Reset</ion-button>\\n                </ion-col>\\n\\n                <ion-col size=\\\"3\\\"></ion-col>\\n            </ion-row>\\n            <ion-row>\\n                <ion-col size=\\\"3\\\"></ion-col>\\n                <ion-col size=\\\"6\\\">\\n                    <ion-button fill=\\\"outline\\\" expand=\\\"block\\\" color=\\\"danger\\\" (click)=\\\"doCancel()\\\"><ion-icon name=\\\"close\\\"></ion-icon> Cancel</ion-button>\\n                </ion-col>\\n                <ion-col size=\\\"3\\\"></ion-col>\\n            </ion-row>\\n        </ion-grid>\\n\\n    </div>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGgvZm9yZ290LXBhc3N3b3JkL2ZvcmdvdC1wYXNzd29yZC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { LoadingController, AlertController, Platform } from '@ionic/angular'\nimport { DataTransactionService } from 'src/app/services/data-transaction/data-transaction.service';\nimport { Router } from '@angular/router';\nimport { ConstantService } from 'src/app/services/constant/constant.service';\nimport { RestApiService } from 'src/app/services/rest-api.service';\nimport { NativeApiService } from 'src/app/services/native-api/native-api.service';\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.page.html',\n  styleUrls: ['./forgot-password.page.scss'],\n})\nexport class ForgotPasswordPage implements OnInit {\n\n  Model = {\n    Phone: '',\n    Email: ''\n  }\n\n  isDebug: boolean = false;\n  ErrorMessage: string = \"\";\n  AccessToken: string = \"\"\n  constructor(\n    private dataTransaction: DataTransactionService,\n    private router: Router,\n    private constantService: ConstantService,\n    private restApi: RestApiService,\n    private api: NativeApiService,\n    public alertController: AlertController,\n    private platform : Platform) {\n\n    dataTransaction.getAccessToken().then(\n      response => {\n        this.AccessToken = response;\n      }\n    )\n\n    if(platform.is('cordova')) this.isDebug = false;\n    else this.isDebug = true;\n  }\n\n  ngOnInit() {\n    this.dataTransaction.getUserPhone().then(\n      response => {\n        console.log(response)\n        if (response != null) this.Model.Phone = `${response}`;\n        else {\n          alert('phone does not exists')\n        }\n      }\n    )\n\n  }\n\n  doCancel() {\n    this.router.navigate(['auth-password'])\n  }\n\n  doNext() {\n    if (this.doValidate()) {\n\n      if (!this.isDebug) {\n        this.api.RequestResetPassword(`${this.Model.Phone}`, this.Model.Email,this.AccessToken).then(\n          response=>{\n            if(response.status == 200){\n              let result = this.api.converResponseToJson(response.data);\n              if(result.Data ==\"\"){\n                this.ErrorMessage = \"this email is not registered with the <br/> mobile number.please check the <br/> email address above again.\"\n              }else{\n                this.showAlert(`Your password has been sent to <br/> ${this.Model.Email}.`)               \n              }\n            }\n          }\n        )\n      } else {\n        this.restApi.RequestResetPassword(this.Model.Phone, this.Model.Email,this.AccessToken).subscribe(\n          response =>{\n            let result = this.restApi.converResponseToJson(response);\n            if(result.ErrorCode == \"0\"){\n              if(result.Data ==\"\"){\n                this.ErrorMessage = \"this email is not registered with the <br/> mobile number.please check the <br/> email address above again.\"\n              }else{\n                this.showAlert(`Your password has been sent to <br/> ${this.Model.Email}.`)\n                \n              }\n            }else{\n              this.ErrorMessage = result.ErrorMessage;\n            }\n          }\n        )\n      }\n    }\n  }\n\n  async showAlert(msg){\n    const alert = await this.alertController.create({\n      header: 'JomSave',\n      subHeader: 'Reset Password',\n      message: msg,\n      buttons: [\n         {\n          text: 'Okay',\n          handler: () => {\n            this.router.navigate(['auth-password']);\n          }\n        }\n      ]\n    });\n     await alert.present();\n  }\n\n  doValidate() {\n    if (this.Model.Email != '') {\n      let isValid = this.constantService.ValidateEmail(this.Model.Email);\n      if (!isValid) this.ErrorMessage = \"Input email is invalid\";\n      else this.ErrorMessage = \"\";\n      return isValid;\n    }\n\n  }\n}\n"],"sourceRoot":""}