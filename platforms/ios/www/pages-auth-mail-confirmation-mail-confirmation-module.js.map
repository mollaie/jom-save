{"version":3,"sources":["webpack:///./src/app/pages/auth/mail-confirmation/mail-confirmation.module.ts","webpack:///./src/app/pages/auth/mail-confirmation/mail-confirmation.page.html","webpack:///./src/app/pages/auth/mail-confirmation/mail-confirmation.page.scss","webpack:///./src/app/pages/auth/mail-confirmation/mail-confirmation.page.ts"],"names":[],"mappings":"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","file":"pages-auth-mail-confirmation-mail-confirmation-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MailConfirmationPage } from './mail-confirmation.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MailConfirmationPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [MailConfirmationPage]\n})\nexport class MailConfirmationPageModule {}\n","module.exports = \"<ion-header no-border>\\n    <ion-toolbar>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n<ion-content>\\n  <div class=\\\"container\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col>\\n          <div class=\\\"logo\\\"></div>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row id=\\\"sendemail\\\" *ngIf=\\\"!isUserHold\\\" >\\n          <ion-col size=\\\"1\\\"></ion-col>\\n        <ion-col size=\\\"2\\\">\\n          <img src=\\\"../../assets/images/icon-email.svg\\\" />\\n        </ion-col>\\n        <ion-col size=\\\"7\\\">\\n          <input type=\\\"text\\\" class=\\\"forgot-password-input\\\" [(ngModel)]=\\\"Model.MailConfirmation\\\" />\\n          <span class=\\\"forgot-password-span\\\">Please key in your email for <br /> verification purpose</span>\\n          <span color=\\\"danger\\\" *ngIf=\\\"ErrorMessage != ''\\\" >{{ErrorMessage}}</span>\\n        </ion-col>\\n        <ion-col size=\\\"2\\\"></ion-col>\\n      </ion-row>\\n      <ion-row *ngIf=\\\"isUserHold\\\" >\\n        <ion-col class=\\\"text-center\\\">\\n          <img src=\\\"../../assets/images/stop.png\\\" width=250 />\\n          <h4 class=\\\"text-center\\\">Waiting for email verified {{BlockDurationText}}</h4>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n    <ion-fab-button class=\\\"next-button\\\" (click)=\\\"doNext()\\\" *ngIf=\\\"!isUserHold\\\">\\n      <ion-icon name=\\\"arrow-forward\\\"></ion-icon>\\n    </ion-fab-button>\\n  </div>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGgvbWFpbC1jb25maXJtYXRpb24vbWFpbC1jb25maXJtYXRpb24ucGFnZS5zY3NzIn0= */\"","\nimport { DataTransactionService } from './../../..//services/data-transaction/data-transaction.service';\nimport { ConstantService } from './../../../services/constant/constant.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {NativeApiService} from '../../../services/native-api/native-api.service'\nimport { Platform } from '@ionic/angular';\nimport { AlertProviderService } from 'src/app/services/alert-provider/alert-provider.service';\nimport { RestApiService } from 'src/app/services/rest-api.service';\nimport { RouteProviderService } from 'src/app/services/route-provider/route-provider.service';\nimport { TouchSequence } from 'selenium-webdriver';\n@Component({\n  selector: 'app-mail-confirmation',\n  templateUrl: './mail-confirmation.page.html',\n  styleUrls: ['./mail-confirmation.page.scss'],\n  providers:[\n    NativeApiService\n  ]\n})\nexport class MailConfirmationPage implements OnInit {\n\n  AccessToken : string = '';\n  ErrorMessage  : string = '';\n  BlockDuration : number = 0;\n  BlockDurationText : string ='00:00';  \n  isUserHold :boolean =  false;\n  isDebug : boolean = false;\n\n  Model = {\n    Phone : '',\n    MailConfirmation:'',\n    Resouses : {\n      PhoneIcon :'',\n      WorldPicture:'',\n      PasswordIcon :'',\n      ConfirmPassword:'',\n      MailConfirmation:'',\n      UserHold : ''\n    }\n  }\n\n  constructor( \n    private router: Router,\n    private dataTransaction : DataTransactionService,\n    private api : NativeApiService,\n    private platform : Platform,\n    private alert : AlertProviderService,\n    private restApi: RestApiService,\n    private routerProvider : RouteProviderService,\n    ) { \n      this.dataTransaction.getAccessToken().then((token) => {\n        this.AccessToken = token;\n      }).catch(error => {\n        this.ErrorMessage = \"The system can not detect your corrent password. <br/> please log out and login again.\";\n      })\n      if(platform.is('cordova'))this.isDebug = false;\n      else this.isDebug  = true;\n\n    }\n\n  ngOnInit() {\n\n    this.dataTransaction.getUserPhone().then((response) => {\n      this.Model.Phone = response;\n    }).catch(error => {\n      this.alert.showErrorMessageAlert(error)\n    })\n  }\n\n\n  doNext(){\n    if(!this.isDebug){\n      this.dataTransaction.setEmail(this.Model.MailConfirmation);\n      this.api.RequestEmailVerification(this.Model.MailConfirmation,this.AccessToken)\n     .then(response=>{\n       if(response.status == 200)\n       {\n         let result = this.api.converResponseToJson(response.data);\n         if(result.ErrorCode == \"0\"){\n          this.BlockDuration = parseInt(result.Data.BlockDuration);\n          this.doHoldUser();\n         }else{\n           this.alert.showErrorMessageAlert(result.ErrorMessage);\n         }\n         \n       }else{\n         this.alert.showErrorMessageAlert(response.error);\n       }\n     }\n       ,error =>{\n           this.alert.showErrorMessageAlert(error);\n       })\n    }else{\n      this.dataTransaction.setEmail(this.Model.MailConfirmation);\n      this.restApi.RequestEmailVerification(this.Model.MailConfirmation,this.AccessToken).subscribe(\n        response =>{\n          let result = this.restApi.converResponseToJson(response);\n          if(result.ErrorCode == \"0\"){\n            this.BlockDuration = parseInt(result.Data.BlockDuration);\n            this.doHoldUser();\n          }else{\n            this.ErrorMessage = result.ErrorMessage;\n          }\n        }\n      )\n    }\n\n  }\n\n  doHoldUser(){\n    this.isUserHold = true;\n    this.countdown();\n    this.requestCountDown();\n  }\n\n  async requestCountDown(){\n    await setInterval(()=>{\n      this.doVerifyEmail();\n    },5000)\n  }\n\n  async countdown() {\n    await setTimeout(x => {\n      if (this.BlockDuration <= 0) { }\n      this.BlockDuration -= 1;\n      if (this.BlockDuration > 0) {\n        this.countdown();\n        this.BlockDurationText = this.parseTime(this.BlockDuration);\n      }\n      else {\n        this.isUserHold = false;\n      }\n    }, 1000);\n  }\n\n  parseTime(secondes) {\n    let result = \"\";\n    let min = \"00\";\n    let sec = \"00\";\n\n    min = (Math.round(secondes / 60)).toString();\n    sec = (secondes - (parseInt(min) * 60)).toString();\n\n    result = `${min}:${sec}`;\n    return result;\n  }\n\n  doVerifyEmail(){\n    if(!this.isDebug){\n      this.api.GetProfile(this.AccessToken).then(\n        response=>{\n          if(response.status == 200){\n            let result = this.api.converResponseToJson(response.data);\n            if(result.Data.NextStep !='VerifyEmail'){\n              this.isUserHold = false;\n              this.BlockDuration = 0;            \n              this.routerProvider.nextStep(result.Data.NextStep);\n            }\n     \n          }else{\n            this.alert.showErrorMessageAlert(response.error)\n          }\n        }\n      ).catch(error=>this.alert.showErrorMessageAlert(error));\n     }else{\n       this.restApi.GetProfile(this.AccessToken).subscribe(\n         response=>{\n           let result = this.restApi.converResponseToJson(response);\n           if(result.ErrorCode == \"0\"){\n             if(result.Data.NextStep != 'VerifyEmail'){\n              this.isUserHold = false;\n              this.BlockDuration = 0;\n              this.routerProvider.nextStep(result.Data.NextStep);\n             }             \n           }\n         }\n       )\n     }\n  }\n  \n  doLogin() {\n    this.router.navigate(['auth-phone']);\n  }\n}\n"],"sourceRoot":""}