{"version":3,"sources":["webpack:///./src/app/pages/profile/home/home.module.ts","webpack:///./src/app/pages/profile/home/home.page.html","webpack:///./src/app/pages/profile/home/home.page.scss","webpack:///./src/app/pages/profile/home/home.page.ts"],"names":[],"mappings":"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","file":"home-home-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","module.exports = \"<ion-content class=\\\"none-background\\\">\\n    <div class=\\\"container\\\">\\n        <ion-grid>\\n            <ion-row>\\n                <ion-col>\\n                    <div class=\\\"logo-2\\\"></div>\\n                </ion-col>\\n            </ion-row>\\n            <!-- <ion-row>\\n                <ion-col>\\n                    <ion-toolbar no-border-top class=\\\"toolbar-2\\\">\\n                        <ion-segment [(ngModel)]=\\\"Navbar\\\" class=\\\"segment-2\\\">\\n                            <ion-segment-button value=\\\"Personal\\\" class=\\\"segment-button-2\\\">\\n                                    <ion-icon name=\\\"person\\\"></ion-icon>\\n                                Self <br /> Service\\n                            </ion-segment-button>\\n                            <ion-segment-button value=\\\"Social\\\" class=\\\"segment-button-2\\\">\\n                                    <ion-icon name=\\\"git-network\\\"></ion-icon>\\n                                Social <br /> Service\\n                            </ion-segment-button>\\n\\n                        </ion-segment>\\n                    </ion-toolbar>\\n                </ion-col>\\n            </ion-row> -->\\n            <ion-row>\\n                <ion-col class=\\\"text-center\\\" *ngIf=\\\"encodeData != ''\\\">\\n                    <!-- <img [src]=\\\"encodeData\\\"/> -->\\n                    <ion-input type=\\\"text\\\" [(ngModel)]=\\\"encodeData\\\"></ion-input>\\n                </ion-col>\\n            </ion-row>\\n            <ion-row>\\n                <ion-col>\\n                    <p class=\\\"text-center tefer-text\\\">{{Model.MemberId}}</p>\\n                </ion-col>\\n            </ion-row>\\n            <ion-row>\\n                <ion-col size=\\\"3\\\"></ion-col>\\n                <ion-col size=\\\"6\\\">\\n                    <ion-button class=\\\"custom-button\\\">Refer</ion-button>\\n                </ion-col>\\n                <ion-col size=\\\"3\\\"></ion-col>\\n            </ion-row>\\n            <ion-row>\\n                <ion-col class=\\\"text-center m-t-20\\\">\\n                <a (click)=\\\"doCheckHistory()\\\">History</a>\\n                </ion-col>\\n            </ion-row>\\n        </ion-grid>\\n    </div>\\n\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2ZpbGUvaG9tZS9ob21lLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { NativeApiService } from 'src/app/services/native-api/native-api.service';\nimport { RestApiService } from 'src/app/services/rest-api.service';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { Platform } from '@ionic/angular';\nimport { RouteProviderService } from 'src/app/services/route-provider/route-provider.service';\nimport { AlertProviderService } from 'src/app/services/alert-provider/alert-provider.service';\nimport { DataTransactionService } from 'src/app/services/data-transaction/data-transaction.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.page.html',\n  styleUrls: ['./home.page.scss'],\n})\nexport class HomePage implements OnInit {\n\n  Navbar: string = \"Social\"\n  QRCode: string = \"\";\n  Model = {\n    DisplayName: \"\",\n    MemberId: '',\n    Email: '',\n    Mobile: '',\n    Gender: 'MKYTY',\n    UserType: \"\",\n    Roles: \"\",\n    NextStep: \"\",\n    Upline: {\n      MemberId: \"\",\n      DisplayName: \"\"\n    }\n  }\n\n  AccessToken: string = \"\";\n  isDebug: boolean = false;\n\n  ErrorMessage: string = '';\n  Data: any;\n\n  zbarOptions: any;\n  scannedResult: any;\n  encodeData: any;\n\n  constructor(\n    private router: Router,\n    private dataTransaction: DataTransactionService,\n    private api: NativeApiService,\n    private platform: Platform,\n    private restApi: RestApiService,\n    private routerProvider: RouteProviderService,\n    private alert: AlertProviderService,\n\n  ) {\n    this.router.routeReuseStrategy.shouldReuseRoute = function () {\n      return false;\n    };\n\n    router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) this.ngOnInit();\n    })\n\n\n    this.zbarOptions = {\n      flash: 'off',\n      drawSight: false\n    }\n\n    if (platform.is('cordova')) this.isDebug = false;\n    else this.isDebug = true;\n\n    this.dataTransaction.getProfile().then(val => {\n      if (val == undefined || val == '') this.router.navigate(['auth-phone']);\n      else {\n        this.Model = val;\n        this.encodedText(this.Model.MemberId);\n        this.dataTransaction.getAccessToken().then(acc => {\n          this.AccessToken = acc.toString();\n        })\n      }\n    })\n  }\n\n  ngOnInit() {\n\n\n  }\n\n\n\n  encodedText(input) {\n    // if (this.platform.is('cordova')) {\n    //   this.barcodeScanner.encode(this.barcodeScanner.Encode.TEXT_TYPE, input).then((encodedData) => {\n    //     this.encodeData = encodedData;\n    //   }, (err) => {\n    //   });\n    // } else {\n    //   this.encodeData = \"\";\n    // }\n\n  }\n\n  doCheckHistory(){\n\n  }\n\n}\n"],"sourceRoot":""}