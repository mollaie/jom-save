{"version":3,"sources":["webpack:///./src/app/pages/auth/auth-password/auth-password.module.ts","webpack:///./src/app/pages/auth/auth-password/auth-password.page.html","webpack:///./src/app/pages/auth/auth-password/auth-password.page.scss","webpack:///./src/app/pages/auth/auth-password/auth-password.page.ts"],"names":[],"mappings":"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","file":"pages-auth-auth-password-auth-password-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AuthPasswordPage } from './auth-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthPasswordPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AuthPasswordPage]\n})\nexport class AuthPasswordPageModule {}\n","module.exports = \"<ion-header no-border>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"end\\\">\\n            <a class=\\\"Login-Link\\\" slot=\\\"end\\\" (click)=\\\"doCancel()\\\">Login</a>            \\n        </ion-buttons>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>      \\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <div class=\\\"container\\\">\\n        <ion-grid>\\n            <ion-row>\\n                <ion-col>\\n                    <div class=\\\"logo\\\"></div>\\n                </ion-col>\\n            </ion-row>\\n        </ion-grid>\\n        <ion-grid>\\n\\n            <ion-row>\\n                <ion-col>\\n\\n                    <div class=\\\"input-container\\\">\\n                        <input type=\\\"password\\\" class=\\\"input-icon-password\\\" [(ngModel)]=\\\"Model.Password\\\" />\\n                        <img src=\\\"../../assets/images/icon-change-login-password.svg\\\" class=\\\"input--icon\\\" />\\n                        <br />\\n                        <span class=\\\"input-message\\\">Please key in your password </span>\\n                        <br/>\\n                        <span color=\\\"danger\\\" *ngIf=\\\"ErrorMessage != ''\\\" >{{ErrorMessage}}</span>\\n                    </div>\\n                    <br />\\n                    <a class=\\\"link\\\" (click)=\\\"doForgotPassword()\\\">Forgot Password</a>\\n                </ion-col>\\n            </ion-row>\\n        </ion-grid>\\n        <ion-fab-button class=\\\"next-button\\\" [disabled]=\\\"Model.Password == ''\\\" (click)=\\\"doNext()\\\">\\n            <ion-icon name=\\\"arrow-forward\\\"></ion-icon>\\n        </ion-fab-button>\\n        \\n    </div>  \\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGgvYXV0aC1wYXNzd29yZC9hdXRoLXBhc3N3b3JkLnBhZ2Uuc2NzcyJ9 */\"","\nimport { Component, OnInit } from '@angular/core';\nimport { Router ,NavigationEnd} from '@angular/router';\nimport { ConstantService } from './../../../services/constant/constant.service';\nimport { DataTransactionService } from './../../..//services/data-transaction/data-transaction.service';\nimport {NativeApiService} from '../../../services/native-api/native-api.service';\nimport { Platform } from '@ionic/angular';\nimport {RestApiService} from '../../../services/rest-api.service'\nimport { RouteProviderService } from 'src/app/services/route-provider/route-provider.service';\nimport { AlertProviderService } from 'src/app/services/alert-provider/alert-provider.service';\n\n@Component({\n  selector: 'app-auth-password',\n  templateUrl: './auth-password.page.html',\n  styleUrls: ['./auth-password.page.scss'],\n  providers:[\n    NativeApiService\n  ]\n})\nexport class AuthPasswordPage implements OnInit {\n\n  Model = {\n    Phone: '',\n    Password: '',\n  }\n\n  ErrorMessage = '';\n  isDebug : boolean = false;\n\n  constructor(private router: Router,\n    private dataTransaction: DataTransactionService,\n    private api: NativeApiService,\n    private platform : Platform,\n    private restApi : RestApiService,\n    private routerProvider : RouteProviderService,\n    private alert : AlertProviderService\n  ) {    \n    router.events.subscribe(event=>{\n      if(event instanceof NavigationEnd)  this.ngOnInit();\n    })\n\n    if(platform.is('cordova')) this.isDebug = false;\n    else this.isDebug = true;\n  }\n\n  ngOnInit() {\n \n    this.dataTransaction.getUserPhone().then(val=>{\n      if (val == undefined || val == '') this.router.navigate(['auth-phone']);\n      else {   \n        this.Model.Phone = val;\n        this.Model.Password = '';\n      }\n    }).catch(error=>{\n        console.log(error);\n    })\n  }\n\n   doNext() {\n     if(!this.isDebug){\n      this.api.Login(`60${this.Model.Phone}`, this.Model.Password, \"FreeMember\")\n      .then(response=>{\n        if(response.status == 200){\n         let result = this.api.converResponseToJson(response.data);\n         this.dataTransaction.setUserPhone(this.Model.Phone);\n         this.dataTransaction.setUserPassword(this.Model.Password);\n         this.dataTransaction.setAccessToken(result.Data.NewAccessToken);\n        this.dataTransaction.setNewRefreshToken(result.Data.NewRefreshToken);\n        this.doGetProfile(result.Data.NewAccessToken);\n         \n        }\n      }).catch(error=>{\n       this.alert.showErrorMessageAlert(error);\n      })\n     }else{\n       this.restApi.Login(`60${this.Model.Phone}`, this.Model.Password, \"FreeMember\")\n       .subscribe(response=>{\n        let result = this.restApi.converResponseToJson(response.Data);\n        this.dataTransaction.setUserPhone(this.Model.Phone);\n        this.dataTransaction.setUserPassword(this.Model.Password);\n        this.dataTransaction.setAccessToken(result.NewAccessToken);\n        this.dataTransaction.setNewRefreshToken(result.NewRefreshToken);\n        this.doGetProfile(result.NewAccessToken);\n       },error=>{\n        this.alert.showErrorMessageAlert(error);\n       })       \n     }\n\n  }\n\n  doGetProfile(AccessToken){\n    if(!this.isDebug){\n      this.api.GetProfile(AccessToken).then(\n        response=>{\n          if(response.status == 200){\n            let result = this.api.converResponseToJson(response.data);\n            if(result.ErrorCode == \"0\"){\n              this.dataTransaction.setProfile(result.Data);\n              this.routerProvider.nextStep(result.Data.NextStep);\n            }else{\n              this.alert.showErrorMessageAlert(result.ErrorMessage);\n            }\n          }\n        }\n      ).catch(error => this.alert.showErrorMessageAlert(error));\n    }else{\n      this.restApi.GetProfile(AccessToken).subscribe(\n        response=>{\n          let result = this.restApi.converResponseToJson(response);\n            if(result.ErrorCode == \"0\"){\n              this.dataTransaction.setProfile(result.Data);\n              this.routerProvider.nextStep(result.Data.NextStep);\n            }else{\n              this.ErrorMessage = result.ErrorMessage;\n            }\n        },\n        error =>{\n          this.ErrorMessage = error;\n        }\n      )\n    }\n  }\n\n  doForgotPassword() {\n    this.router.navigate(['forgot-password']);\n  }\n\n  doCancel() {\n    this.router.navigate(['auth-phone'])\n  }\n}\n"],"sourceRoot":""}