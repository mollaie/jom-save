{"version":3,"sources":["webpack:///./src/app/pages/auth/change-password/change-password.module.ts","webpack:///./src/app/pages/auth/change-password/change-password.page.html","webpack:///./src/app/pages/auth/change-password/change-password.page.scss","webpack:///./src/app/pages/auth/change-password/change-password.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEe;AAE5D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wEAAkB;KAC9B;CACF,CAAC;AAWF;IAAA;IAAuC,CAAC;IAA3B,wBAAwB;QATpC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,wEAAkB,CAAC;SACnC,CAAC;OACW,wBAAwB,CAAG;IAAD,+BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBrC,sgEAAsgE,cAAc,iS;;;;;;;;;;;ACAphE,+DAA+D,+K;;;;;;;;;;;;;;;;;;;;;;;ACAyC;AAEtD;AACT;AACuC;AACtC;AACyB;AAC2B;AAS9F;IAaE,4BACU,MAAc,EACd,eAAuC,EACvC,GAAqB,EACrB,QAAmB,EACnB,OAAwB,EACxB,KAA4B;QANtC,iBAeC;QAdS,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAwB;QACvC,QAAG,GAAH,GAAG,CAAkB;QACrB,aAAQ,GAAR,QAAQ,CAAW;QACnB,YAAO,GAAP,OAAO,CAAiB;QACxB,UAAK,GAAL,KAAK,CAAuB;QAjBtC,iBAAY,GAAW,EAAE,CAAC;QAC1B,gBAAW,GAAW,EAAE,CAAC;QACzB,YAAO,GAAa,KAAK,CAAC;QAE1B,UAAK,GAAG;YACN,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;YACZ,WAAW,EAAE,EAAE;YACf,eAAe,EAAE,EAAE;SACpB;QAUC,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,UAAC,KAAK;YAC/C,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC3B,CAAC,CAAC,CAAC,KAAK,CAAC,eAAK;YACZ,KAAI,CAAC,YAAY,GAAG,wFAAwF,CAAC;QAC/G,CAAC,CAAC;QACF,IAAG,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC;YAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;;YAC1C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAYC;QAXC,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,UAAC,QAAQ;YAChD,KAAI,CAAC,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC;YAC5B,KAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,cAAI;gBAC9C,KAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI;YAC5B,CAAC,CAAC,CAAC,KAAK,CAAC,eAAK;gBACZ,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC5B,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC,KAAK,CAAC,eAAK;YACZ,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,CAAC;IAEJ,CAAC;IAEA,mCAAM,GAAN;QAAA,iBAwCA;QAvCC,IAAG,CAAC,IAAI,CAAC,eAAe,EAAE;YAAE,OAAO;QAElC,IAAG,CAAC,IAAI,CAAC,OAAO,EAAC;YAChB,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE;gBACxD,IAAI,CAAC,YAAY,GAAG,yFAAyF,CAAC;gBAC9G,OAAO;aACR;YACD,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,EAAE,EAAE;gBAC7B,IAAI,CAAC,YAAY,GAAG,wFAAwF;gBAC5G,OAAO;aACR;YACA,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC;iBAC/D,IAAI,CAAC,UAAC,QAAQ;gBACb,IAAG,QAAQ,CAAC,MAAM,IAAI,GAAG,EAAC;oBACxB,IAAI,MAAM,GAAG,KAAI,CAAC,GAAG,CAAC,oBAAoB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;oBAC1D,IAAI,MAAM,CAAC,SAAS,GAAG,GAAG,EAAE;wBAC1B,KAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,gCAAgC,CAAC,CAAC;wBACnE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;qBAC7C;yBACI;wBACH,KAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;qBACvD;iBACF;YAEH,CAAC,CAAC,CAAC,KAAK,CAAC,eAAK;gBACZ,KAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,KAAK,CAAC;YACzC,CAAC,CAAC;SACJ;aAAI;YACH,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAC7E,kBAAQ;gBACN,IAAG,QAAQ,CAAC,SAAS,IAAG,GAAG,EAAC;oBAC3B,KAAK,CAAC,gCAAgC,CAAC,CAAC;oBACxC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;iBAC5C;qBAAI;oBACH,KAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC;iBAC3C;YACH,CAAC,CACF;SACF;IACJ,CAAC;IAED,4CAAe,GAAf;QACE,IAAI,CAAC,YAAY,GAAE,EAAE,CAAC;QAEtB,IAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAC;YACnC,IAAI,CAAC,YAAY,GAAG,4CAA4C,CAAC;YACjE,OAAO,KAAK,CAAC;SACd;QAED,IAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAC;YACnD,IAAI,CAAC,YAAY,GAAG,mDAAmD,CAAC;YACxE,OAAO,KAAK,CAAC;SACd;QAED,OAAO,IAAI,CAAC;IAEd,CAAC;IAED,oCAAO,GAAP;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACvC,CAAC;IAzGU,kBAAkB;QAR9B,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,kIAA0C;YAE1C,SAAS,EAAC;gBACR,wFAAgB;aACjB;;SACF,CAAC;+EAekB,sDAAM;YACG,0GAAsB;YAClC,wFAAgB;YACV,uDAAQ;YACT,gFAAc;YAChB,2GAAoB;OAnB3B,kBAAkB,CA0G9B;IAAD,yBAAC;CAAA;AA1G8B","file":"pages-auth-change-password-change-password-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChangePasswordPage } from './change-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChangePasswordPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ChangePasswordPage]\n})\nexport class ChangePasswordPageModule {}\n","module.exports = \"<ion-header no-border>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"end\\\">\\n            <a class=\\\"Login-Link\\\" slot=\\\"end\\\" (click)=\\\"doLogin()\\\">Login</a>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <div class=\\\"container\\\">\\n        <ion-grid>\\n            <ion-row>\\n                <ion-col>\\n                    <div class=\\\"logo\\\"></div>\\n                </ion-col>\\n            </ion-row>\\n            <ion-row>\\n                <ion-col size=\\\"1\\\"></ion-col>\\n                <ion-col size=\\\"2\\\">\\n                    <img src=\\\"../../assets/images/icon-change-login-password.svg\\\" />\\n                </ion-col>\\n                <ion-col size=\\\"7\\\">\\n                    <input type=\\\"password\\\" class=\\\"forgot-password-input\\\" [(ngModel)]=\\\"Model.NewPassword\\\" />\\n                    <span class=\\\"forgot-password-span\\\">Please key in your new password</span>\\n                    <p class=\\\"forgot-password-span\\\">\\n                        Password must be 8-20\\n                        characters,<br /> 1 letter, 1 CAPS.\\n                    </p>\\n                </ion-col>\\n                <ion-col size=\\\"2\\\">\\n\\n                </ion-col>\\n\\n            </ion-row>\\n            <ion-row>\\n                <ion-col size=\\\"1\\\"></ion-col>\\n                <ion-col size=\\\"2\\\">\\n                    <img src=\\\"../../assets/images/icon-confirm-password.svg\\\" />\\n                </ion-col>\\n                <ion-col size=\\\"7\\\">\\n                    <input type=\\\"password\\\" class=\\\"forgot-password-input\\\" [(ngModel)]=\\\"Model.ConfirmPassword\\\"\\n                        (change)=\\\"doCheckPassword\\\" />\\n                    <span class=\\\"forgot-password-span\\\">Please confirm your password</span>\\n                </ion-col>\\n                <ion-col size=\\\"2\\\">\\n\\n                </ion-col>\\n\\n            </ion-row>\\n            <ion-row *ngIf=\\\"ErrorMessage != ''\\\">\\n                <ion-col>\\n                    <ion-item text-wrap color=\\\"danger\\\">\\n                        {{ErrorMessage}}\\n                    </ion-item>\\n                </ion-col>\\n            </ion-row>\\n        </ion-grid>\\n        <ion-fab-button class=\\\"next-button\\\" (click)=\\\"doNext()\\\">\\n            <ion-icon name=\\\"arrow-forward\\\"></ion-icon>\\n        </ion-fab-button>\\n    </div>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGgvY2hhbmdlLXBhc3N3b3JkL2NoYW5nZS1wYXNzd29yZC5wYWdlLnNjc3MifQ== */\"","import { DataTransactionService } from './../../..//services/data-transaction/data-transaction.service';\nimport { ConstantService } from './../../../services/constant/constant.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {NativeApiService} from '../../../services/native-api/native-api.service'\nimport { Platform } from '@ionic/angular';\nimport { RestApiService } from 'src/app/services/rest-api.service';\nimport { AlertProviderService } from 'src/app/services/alert-provider/alert-provider.service';\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.page.html',\n  styleUrls: ['./change-password.page.scss'],\n  providers:[\n    NativeApiService\n  ]\n})\nexport class ChangePasswordPage implements OnInit {\n\n  ErrorMessage: string = '';\n  AccessToken: string = '';\n  isDebug : boolean = false;\n\n  Model = {\n    Phone: '',\n    Password: '',\n    NewPassword: '',\n    ConfirmPassword: ''\n  }\n\n  constructor(\n    private router: Router,\n    private dataTransaction: DataTransactionService,\n    private api: NativeApiService,\n    private platform : Platform,\n    private restApi : RestApiService,\n    private alert : AlertProviderService) {\n\n    this.dataTransaction.getAccessToken().then((token) => {\n      this.AccessToken = token;\n    }).catch(error => {\n      this.ErrorMessage = \"The system can not detect your corrent password. <br/> please log out and login again.\";\n    })\n    if(platform.is('cordova'))this.isDebug = false;\n    else this.isDebug = true;\n  }\n\n  ngOnInit() {\n    this.dataTransaction.getUserPhone().then((response) => {\n      this.Model.Phone = response;\n      this.dataTransaction.getUserPassword().then(pass => {\n        this.Model.Password = pass\n      }).catch(error => {\n        this.ErrorMessage = error;\n      })\n    }).catch(error => {\n      this.ErrorMessage = error;\n    })\n\n  }\n\n   doNext() {\n    if(!this.doCheckPassword()) return;\n\n     if(!this.isDebug){\n      if (this.Model.NewPassword != this.Model.ConfirmPassword) {\n        this.ErrorMessage = \"The entered password and confirmation are equal.<br/> please check your entered values.\";\n        return;\n      }\n      if (this.Model.Password == '') {\n        this.ErrorMessage = \"The system can not detect your corrent password. <br/> please log out and login again.\"\n        return;\n      }\n       this.api.CreatePassword(this.Model.NewPassword, this.AccessToken)\n        .then((response) => {\n          if(response.status == 200){\n            let result = this.api.converResponseToJson(response.data);\n            if (result.ErrorCode = \"0\") {\n              this.alert.showErrorMessageAlert('Your password has been changed');\n              this.router.navigate(['mail-confirmation']);\n            }\n            else {\n              this.alert.showErrorMessageAlert(result.ErrorMessage);\n            }\n          }\n  \n        }).catch(error=>{\n          this.alert.showErrorMessageAlert(error)\n        })\n     }else{\n       this.restApi.CreatePassword(this.Model.NewPassword, this.AccessToken).subscribe(\n         response=>{\n           if(response.ErrorCode ==\"0\"){\n            alert('Your password has been changed');\n            this.router.navigate(['mail-confirmation']);\n           }else{\n             this.ErrorMessage = response.ErrorMessage;\n           }\n         }\n       )\n     }\n  }\n\n  doCheckPassword(){\n    this.ErrorMessage= \"\";\n\n    if(this.Model.NewPassword.length < 8){\n      this.ErrorMessage = \"Your password's length must be at least 8.\";\n      return false;\n    }\n\n    if(this.Model.NewPassword.includes(this.Model.Phone)){\n      this.ErrorMessage = \"Password could not be a part of your phone number\";\n      return false;\n    }\n\n    return true;\n\n  }\n\n  doLogin() {\n    this.router.navigate(['auth-phone']);\n  }\n}\n"],"sourceRoot":""}