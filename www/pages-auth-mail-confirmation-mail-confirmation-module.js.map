{"version":3,"sources":["webpack:///./src/app/pages/auth/mail-confirmation/mail-confirmation.module.ts","webpack:///./src/app/pages/auth/mail-confirmation/mail-confirmation.page.html","webpack:///./src/app/pages/auth/mail-confirmation/mail-confirmation.page.scss","webpack:///./src/app/pages/auth/mail-confirmation/mail-confirmation.page.ts","webpack:///./src/app/services/alert-provider/alert-provider.service.ts","webpack:///./src/app/services/route-provider/route-provider.service.ts"],"names":[],"mappings":"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","file":"pages-auth-mail-confirmation-mail-confirmation-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MailConfirmationPage } from './mail-confirmation.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MailConfirmationPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [MailConfirmationPage]\n})\nexport class MailConfirmationPageModule {}\n","module.exports = \"\\n\\n<ion-content class=\\\"no-scroll content-background \\\">\\n  <div class=\\\"container m-t-50\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col>\\n          <div class=\\\"logo\\\"></div>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row id=\\\"sendemail\\\" *ngIf=\\\"!isUserHold\\\" >\\n          <ion-col size=\\\"1\\\"></ion-col>\\n        <ion-col size=\\\"2\\\">\\n          <img src=\\\"../../assets/images/icon-email.svg\\\" />\\n        </ion-col>\\n        <ion-col size=\\\"7\\\">\\n          <input type=\\\"text\\\" class=\\\"forgot-password-input\\\" [(ngModel)]=\\\"Model.MailConfirmation\\\" />\\n          <span class=\\\"forgot-password-span\\\">Please key in your email for <br /> verification purpose</span>\\n          <span color=\\\"danger\\\" *ngIf=\\\"ErrorMessage != ''\\\" >{{ErrorMessage}}</span>\\n        </ion-col>\\n        <ion-col size=\\\"2\\\"></ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </div>\\n  <div class=\\\"modal-container\\\" *ngIf=\\\"isUserHold\\\">\\n      <div class=\\\"modal\\\">\\n          <div class=\\\"modal-header-warning\\\">\\n              <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            <p>Please check your email to verify.</p>\\n            <p style=\\\"color:#bdbdbd;text-align: center;font-weight: bold\\\">{{BlockDurationText}}</p>\\n          </div>\\n          <!-- <div class=\\\"modal-footer\\\">\\n            <a style=\\\"float: right;\\\" (click)=\\\"doVerifyEmail()\\\">Continue</a>\\n          </div> -->\\n      </div>\\n  </div>\\n\\n  <div class=\\\"modal-container\\\" *ngIf=\\\"isUserConfirmed\\\">\\n      <div class=\\\"modal\\\">\\n          <div class=\\\"modal-header-sucess\\\">\\n              <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            <p>A verification will be send to</p>\\n            <p>{{Model.MailConfirmation}}</p>\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <a style=\\\"float: right;\\\" (click)=\\\"doNext()\\\">OK</a>\\n            <a style=\\\"float: left;\\\" (click)=\\\"doCancel()\\\">Cancel</a>\\n          </div>\\n      </div>\\n  </div>\\n\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n      <ion-fab-button class=\\\"next-button\\\" (click)=\\\"doNext()\\\">\\n          <ion-icon name=\\\"arrow-forward\\\"></ion-icon>\\n      </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGgvbWFpbC1jb25maXJtYXRpb24vbWFpbC1jb25maXJtYXRpb24ucGFnZS5zY3NzIn0= */\"","\nimport { DataTransactionService } from './../../..//services/data-transaction/data-transaction.service';\nimport { ConstantService } from './../../../services/constant/constant.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NativeApiService } from '../../../services/native-api/native-api.service'\nimport { Platform } from '@ionic/angular';\nimport { AlertProviderService } from 'src/app/services/alert-provider/alert-provider.service';\nimport { RestApiService } from 'src/app/services/rest-api.service';\nimport { RouteProviderService } from 'src/app/services/route-provider/route-provider.service';\nimport { TouchSequence } from 'selenium-webdriver';\n@Component({\n  selector: 'app-mail-confirmation',\n  templateUrl: './mail-confirmation.page.html',\n  styleUrls: ['./mail-confirmation.page.scss'],\n  providers: [\n    NativeApiService\n  ]\n})\nexport class MailConfirmationPage implements OnInit {\n\n  AccessToken: string = '';\n  ErrorMessage: string = '';\n  BlockDuration: number = 0;\n  BlockDurationText: string = '00:00';\n  isUserHold: boolean = false;\n  isDebug: boolean = false;\n  isUserConfirmed : boolean = false;\n  interval : any;\n  Model = {\n    Phone: '',\n    MailConfirmation: '',\n    Resouses: {\n      PhoneIcon: '',\n      WorldPicture: '',\n      PasswordIcon: '',\n      ConfirmPassword: '',\n      MailConfirmation: '',\n      UserHold: ''\n    }\n  }\n\n  constructor(\n    private router: Router,\n    private dataTransaction: DataTransactionService,\n    private api: NativeApiService,\n    private platform: Platform,\n    private alert: AlertProviderService,\n    private restApi: RestApiService,\n    private routerProvider: RouteProviderService,\n  ) {\n    this.dataTransaction.getAccessToken().then((token) => {\n      this.AccessToken = token;\n    }).catch(error => {\n      this.ErrorMessage = \"The system can not detect your corrent password. <br/> please log out and login again.\";\n    })\n    if (platform.is('cordova')) this.isDebug = false;\n    else this.isDebug = true;\n\n  }\n\n  ngOnInit() {\n\n    this.dataTransaction.getUserPhone().then((response) => {\n      this.Model.Phone = response;\n    }).catch(error => {\n      this.alert.showErrorMessageAlert(error)\n    })\n  }\n\n\n  doNext() {\n    this.isUserConfirmed = false;\n    if (!this.isDebug) {\n      this.dataTransaction.setEmail(this.Model.MailConfirmation);\n      this.api.RequestEmailVerification(this.Model.MailConfirmation, this.AccessToken)\n        .then(response => {\n          if (response.status == 200) {\n            let result = this.api.converResponseToJson(response.data);\n            if (result.ErrorCode == \"0\") {\n              this.BlockDuration = parseInt(result.Data.BlockDuration);\n              this.doHoldUser();\n            } else {\n              this.alert.showErrorMessageAlert(result.ErrorMessage);\n            }\n\n          } else {\n            this.alert.showErrorMessageAlert(response.error);\n          }\n        }\n          , error => {\n            this.alert.showErrorMessageAlert(error);\n          })\n    } else {\n      this.dataTransaction.setEmail(this.Model.MailConfirmation);\n      this.restApi.RequestEmailVerification(this.Model.MailConfirmation, this.AccessToken).subscribe(\n        response => {\n          let result = this.restApi.converResponseToJson(response);\n          if (result.ErrorCode == \"0\") {\n            this.BlockDuration = parseInt(result.Data.BlockDuration);\n            this.doHoldUser();\n          } else {\n            this.ErrorMessage = result.ErrorMessage;\n          }\n        }\n      )\n    }\n\n  }\n\n  doHoldUser() {\n    this.isUserHold = true;\n    this.countdown();\n    this.requestCountDown();\n  }\n\n  async requestCountDown() {\n    this.interval = await setInterval(() => {\n      this.doVerifyEmail();\n    }, 5000)\n  }\n\n  async countdown() {\n    await setTimeout(x => {\n      if (this.BlockDuration <= 0) { }\n      this.BlockDuration -= 1;\n      if (this.BlockDuration > 0) {\n        this.countdown();\n        this.BlockDurationText = this.parseTime(this.BlockDuration);\n      }\n      else {\n        this.isUserHold = false;\n      }\n    }, 1000);\n  }\n\n  parseTime(secondes) {\n    let sec_num = parseInt(secondes, 10); // don't forget the second param\n    let hours = Math.floor(sec_num / 3600).toString();\n    let minutes = Math.floor((sec_num - (parseInt(hours) * 3600)) / 60).toString();\n    let seconds = (sec_num - (parseInt(hours) * 3600) - (parseInt(minutes) * 60)).toString();\n\n    if (parseInt(hours) < 10) { hours = \"0\" + hours; }\n    if (parseInt(minutes) < 10) { minutes = \"0\" + minutes; }\n    if (parseInt(seconds) < 10) { seconds = \"0\" + seconds; }\n    return hours + ':' + minutes + ':' + seconds;\n  }\n\n  doVerifyEmail() {\n    if (!this.isDebug) {\n      this.api.GetProfile(this.AccessToken).then(\n        response => {\n          if (response.status == 200) {\n            let result = this.api.converResponseToJson(response.data);\n            if (result.Data.NextStep != 'VerifyEmail') {\n              this.isUserHold = false;\n              this.BlockDuration = 0;\n              clearInterval(this.interval);\n              this.routerProvider.nextStep(result.Data.NextStep);\n            }\n\n          } else {\n            this.alert.showErrorMessageAlert(response.error)\n          }\n        }\n      ).catch(error => this.alert.showErrorMessageAlert(error));\n    } else {\n      this.restApi.GetProfile(this.AccessToken).subscribe(\n        response => {\n          let result = this.restApi.converResponseToJson(response);\n          if (result.ErrorCode == \"0\") {\n            if (result.Data.NextStep != 'VerifyEmail') {\n              this.isUserHold = false;\n              this.BlockDuration = 0;\n              clearInterval(this.interval);\n              this.routerProvider.nextStep(result.Data.NextStep);\n            }\n          }\n        }\n      )\n    }\n  }\n\n  doCancel(){\n    this.isUserConfirmed = false;\n  }\n\n  doConfirmation(){\n    this.isUserConfirmed = true;\n  }\n\n  doLogin() {\n    this.router.navigate(['auth-phone']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { LoadingController, AlertController } from '@ionic/angular'\nimport { ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertProviderService {\n\n  constructor(\n    private alertController : AlertController,\n    private loadingCntroller : LoadingController,\n    public toastController: ToastController\n  ) { }\n\n\n  async showErrorMessageAlert(msg){\n    const alert = await this.alertController.create({\n      header: 'Jom-Save',\n      message: msg,\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n\n  async presentToast(msg) {\n    const toast = await this.toastController.create({\n      message: msg,\n      duration: 3000,\n      position:'bottom'\n    });\n    toast.present();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteProviderService {\n\n  constructor(private router: Router) {\n  }\n\n  nextStep(step) {\n    switch (step) {\n      case \"AddReferral\":\n        this.router.navigate(['referral']);\n        break;\n      case \"MakePayment\":\n        this.router.navigate(['top-up']);\n        break;\n      case \"CreatePassword\":\n        this.router.navigate(['change-password']);\n        break;\n      case \"VerifyEmail\":\n        this.router.navigate(['mail-confirmation']);\n        break;\n      case \"CompleteProfile\":\n        this.router.navigate(['complete-profile']);\n        break;\n      case \"VerifyProfile\":\n        this.router.navigate(['profile/profile/home']);\n        break;\n      case \"Password\":\n        this.router.navigate(['auth-password']);\n        break;\n      case \"Upline\":\n        break;\n      case \"ForgotPassword\":\n        this.router.navigate(['forgot-password']);\n        break;\n      case \"Phone\":\n        this.router.navigate(['auth-phone']);\n        break;\n      case \"OTP-ChangePassword\":\n        this.router.navigate(['otp-change-number']);\n        break;\n      default:\n        this.router.navigate(['profile/profile/home']);\n    }\n  }\n}\n"],"sourceRoot":""}